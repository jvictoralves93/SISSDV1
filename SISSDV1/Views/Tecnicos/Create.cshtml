@model SISSDV1.Models.Tecnico
@{
    ViewBag.Title = "Novo Tecnico";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Request.Cookies["Acesso"] == null)
    {
        Response.Redirect("Index");
    }
}

<br />
<div class="card">
    <header class="card-header" data-background-color="green">
        Criar Técnico
    </header>
    <div class="card-body">
        @using (Html.BeginForm("Create","Tecnicos", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.NomeTecnico, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NomeTecnico, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeTecnico, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Ramal, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Ramal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ramal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.IDUnidade, "Unidade", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("IDUnidade", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDUnidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12" style="margin-top: 2%">
                    <div class="pull-right">
                        @Html.ActionLink("Voltar", "Index", "Tecnicos", new { @class = "btn btn-danger btn-sm" })
                        <input type="submit" value="Salvar" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />
@section Scripts {
    <script src="~/Scripts/jquery.mask.js"></script>
    <script>
        var SPMaskBehavior = function (val) {
            return val.replace(/\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';
        },
        spOptions = {
            onKeyPress: function (val, e, field, options) {
                field.mask(SPMaskBehavior.apply({}, arguments), options);
            }
        };
        $('#Celular').mask(SPMaskBehavior, spOptions);
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
