@model SISSDV1.Models.User
@{
    Layout = null;
    ViewBag.Title = "Novo Usuário";
}
<div class="modal-dialog card" role="document">
    <div class="contentmodal">
        <div class="card-header" data-background-color="green">
            <button type="button" class="close" data-dismiss="modal">
                <span aria-hidden="true">×</span><span class="sr-only">Fechar</span>
            </button>
            Novo Usuário
        </div>
        <div class="modal-body card-body" style="margin-left:2%;">
            <form id="form-user" method="post">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-4 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", id = "nome" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-8 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", id = "sobrenome" } })
                        @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", id = "Usuario", onblur = "VerificarUsuario();", onkeypress = "digitando();" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        <div id="validacao"></div>
                    </div>
                    <div class="col-md-4 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Cargo, new { htmlAttributes = new { @class = "form-control", id = "cargo" } })
                        @Html.ValidationMessageFor(model => model.Cargo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.SubDepartamento, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SubDepartamento, new { htmlAttributes = new { @class = "form-control", id = "subdepartamento" } })
                        @Html.ValidationMessageFor(model => model.SubDepartamento, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", id = "telefone" } })
                        @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", id = "cpf" } })
                        @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.Chapa, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Chapa, new { htmlAttributes = new { @class = "form-control", id = "chapa" } })
                        @Html.ValidationMessageFor(model => model.Chapa, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", id = "senha" } })
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 form-group label-floating is-empty">
                        @Html.LabelFor(model => model.ConfirmarSenha, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ConfirmarSenha, new { htmlAttributes = new { @class = "form-control", id = "confsenha" } })
                        @Html.ValidationMessageFor(model => model.ConfirmarSenha, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(model => model.Cidade, "Cidade", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("cidade", null, htmlAttributes: new { @class = "form-control", @onfocus = "FiltrarUnidade();", @onchange = "FiltrarUnidade();", @onload = "FiltrarUnidade();" })
                        @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(model => model.Unidade, "Unidade", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("unidade", null, htmlAttributes: new { @class = "form-control", @onfocus = "FiltrarDepartamento();", @onchange = "FiltrarDepartamento();", @onload = "FiltrarDepartamento();" })
                        @Html.ValidationMessageFor(model => model.Unidade, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(model => model.Departamento, "Departamento", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("departamento", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Departamento, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group form-black label-floating is-empty">
                    <div class="col-md-12">
                        <div class="pull-right">
                            <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Fechar</button>
                            <input type="submit" class="btn btn-primary btn-sm" id="salvar" value="Salvar"/>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="modal-footer">
        </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
<!-- Validação -->

@Scripts.Render("~/bundles/funcionalidades")
@Scripts.Render("~/bundles/jqueryval")
<!-- Filtros -->
<script>
//Cria um usuário
var form = $("#form-user");


form.submit(function CriarUsuario() {
    if (form.valid()) {
        var nome = $('#nome').val();
        var sobrenome = $('#sobrenome').val();
        var username = $('#Usuario').val();
        var cargo = $('#cargo').val();
        var subdepartamento = $('#subdepartamento').val();
        var telefone = $('#telefone').val();
        var cpf = $('#cpf').val();
        var chapa = $('#chapa').val();
        var senha = $('#senha').val();
        var cidade = $('#cidade').val();
        var unidade = $('#unidade').val();
        var departamento = $('#departamento').val();
        var diainicio = $('#diainicio').val();
        var diafim = $('#diafim').val();
        var horarioinicio = $('#horarioinicio').val();
        var horariofim = $('#horariofim').val();
        $.ajax({
            url: 'CriarUsuario',
            type: "POST",
            dataType: "JSON",
            data: { nome, sobrenome, username, diainicio, diafim, horarioinicio, horariofim, cargo, subdepartamento, telefone, cpf, chapa, senha, cidade, unidade, departamento },
            success: function () {
                $("#modalNovo").modal("hide");
                ModalSucesso();
            }
        });
    }
    return false;
    });


$(document).ready(function () {
    FiltrarCidade();
});
</script>