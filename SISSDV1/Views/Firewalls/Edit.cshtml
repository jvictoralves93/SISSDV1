@model SISSDV1.Models.Firewall

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Request.Cookies["Acesso"] == null)
    {
        Response.Redirect("Index");
    }
}


<br />
<div class="card">
    <header class="card-header" data-background-color="green">
        Editar Firewall
    </header>
    <div class="card-body">
        @using (Html.BeginForm("Edit", "Firewalls", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IDFirewall)

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Licenca, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Licenca, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.Licenca, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.AcessoInterno, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.AcessoInterno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AcessoInterno, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.AcessoExterno, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.AcessoExterno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AcessoExterno, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.IDUnidade, "Unidade", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("IDUnidade", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDUnidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12" style="margin-top: 2%">
                    <div class="pull-right">
                        @Html.ActionLink("Voltar", "Index", "Firewalls", new { @class = "btn btn-danger btn-sm" })
                        <input type="submit" value="Salvar" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
